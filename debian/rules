#!/usr/bin/make -f

ifeq (,$(filter terse,${DEB_BUILD_OPTIONS}))
export DH_VERBOSE=1
export V=1
export VERBOSE=1
endif

LC_ALL:=C
export LC_ALL
TZ:=UTC
export TZ

shellescape='$(subst ','\'',$(1))'
shellexport=$(1)=$(call shellescape,${$(1)})

# mostly ../.gitignore minus debian/copyright
CLEANFILES+=	*.log
CLEANFILES+=	__pycache__
CLEANFILES+=	_site
CLEANFILES+=	coverage
CLEANFILES+=	dist
CLEANFILES+=	disttmp
CLEANFILES+=	docroot
CLEANFILES+=	docs/download.html
CLEANFILES+=	docs/options.html
CLEANFILES+=	docs/versions.html
CLEANFILES+=	dygraphs-2.*.tgz
CLEANFILES+=	env
CLEANFILES+=	jsdoc
CLEANFILES+=	jsdoc.tmp
CLEANFILES+=	node_modules
CLEANFILES+=	package-lock.json
CLEANFILES+=	site
CLEANFILES+=	src-es5

execute_before_dh_clean:
	echo | cat debian/copyright.in - LICENSE.txt >debian/copyright
	chmod 644 debian/copyright
	-rm -rf ${CLEANFILES}

%:
	dh $@ --buildsystem=none

override_dh_auto_build:
	env IS_ACTUAL_DEBIAN_BUILD=1 scripts/build.sh
	(cd site && exec mksh ../scripts/mkdiridx.sh --ah '<a href="../">libjs-dygraphs</a> manual integration tests' ./tests)

execute_after_dh_installdocs:
	# replaced with symbolic links
	rm debian/libjs-dygraphs/usr/share/doc/libjs-dygraphs/site/.jslibs/*
	rm debian/libjs-dygraphs/usr/share/doc/libjs-dygraphs/site/LICENSE.txt
	rm -r debian/libjs-dygraphs/usr/share/doc/libjs-dygraphs/site/dist

execute_after_dh_compress:
	(cd debian/libjs-dygraphs/usr/share/doc/libjs-dygraphs/site && \
	    find . -name \*.gz -a \! -name \*.pdf.gz -exec gzip -d '{}' +)
